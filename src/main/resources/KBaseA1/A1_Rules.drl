package massim.tedumas;
import eis.iilang.Percept;
import eis.iilang.Action;
import eis.iilang.Identifier;
import java.util.List;
import eis.exceptions.ActException;
import org.apache.logging.log4j.Logger;
import massim.tedumas.TEDUPercept;
import massim.tedumas.agents.BasicAgent
import eis.iilang.Numeral;

global Logger logger;
global massim.eismassim.EnvironmentInterface eis;
global BasicAgent agent;
global StringBuilder route;

/*
Commented parts in this code represents a small working part of the scenario.
If you want, you can uncomment the commented eis.performAction() lines and comment
 the uncommented eis.performAction() lines in the same rule.
*/

rule "Attach Action: after attaching a block move to another place"
when
    $lastAction: TEDUPercept(percept.getName().equals("lastAction"), percept.getParameters().toString().equals("[attach]"))
    $lastActionResult: TEDUPercept(stepID == $lastAction.stepID, percept.getName().equals("lastActionResult"), percept.getParameters().toString().equals("[success]"))
    $lastActionParams: TEDUPercept(stepID == $lastAction.stepID, percept.getName().equals("lastActionParams"),
        $direction: percept.getParameters().toString())
then
    String direction = agent.generateRandomDirection();
    //eis.performAction("A1", new Action("rotate", new Identifier("ccw")));
    eis.performAction("A1", new Action("move", new Identifier("e")));
    logger.info("$$$$$RULE: after attach had been successful move: n" + direction );
end

rule "Request Action: when failed_role, skip"
when
    $tPercept: TEDUPercept(percept.getName().equals("lastActionResult"), percept.getParameters().toString().equals("[failed_role]"))
then
    eis.performAction("A1", new Action("skip"));
    //eis.performAction("A1", new Action("move", new Identifier("s")));
    logger.info("$$$$$RULE: after failed_role skip");
end

rule "Request Action: when failed_blocked, skip"
when
    $tPercept: TEDUPercept(percept.getName().equals("lastActionResult"), percept.getParameters().toString().equals("[failed_blocked]"))
then
    //eis.performAction("A1", new Action("move", new Identifier("s")));
    eis.performAction("A1", new Action("skip"));
    logger.info("$$$$$RULE: after failed_blocked skip");
end

rule "Attach Action: after request had been successful attach the block"
when
    $lastAction: TEDUPercept(percept.getName().equals("lastAction"), percept.getParameters().toString().equals("[request]"))
    $lastActionResult: TEDUPercept(stepID == $lastAction.stepID, percept.getName().equals("lastActionResult"), percept.getParameters().toString().equals("[success]"))
    $lastActionParams: TEDUPercept(stepID == $lastAction.stepID, percept.getName().equals("lastActionParams"),
        $direction: percept.getParameters().toString())
then
    //eis.performAction("A1", new Action("attach", new Identifier("w")));
    eis.performAction("A1", new Action("attach", new Identifier($direction.substring(2,3))));
    logger.info("$$$$$RULE: after request had been successful attach the block: " + $direction.substring(2,3));
end

rule "Request Action: When near a dispenser request block"
when
    $TEDUPercept: TEDUPercept(percept.getName().equals("thing"), identifyThing().equals("dispenser"), nearDispenser()==true,
    $direction: dispenserWay())
then
    eis.performAction("A1", new Action("request", new Identifier($direction)));
    logger.info("$$$$$RULE: request block: " + $direction);
end

rule "Skip Action: after skip move randomly"
when
    $tPercept: TEDUPercept(percept.getName().equals("lastAction"), percept.getParameters().toString().equals("[skip]"))
    $lastActionResult: TEDUPercept(stepID == $tPercept.stepID, percept.getName().equals("lastActionResult"), percept.getParameters().toString().equals("[success]"))
then
    String direction = agent.generateRandomDirection();
    eis.performAction("A1", new Action("move", new Identifier(direction)));
    //eis.performAction("A1", new Action("move", new Identifier("n")));
    logger.info("$$$$$RULE: after skip move randomly: "+ direction);
end

rule "Adopt Action: after a successful adopt skip one action"
when
    $tPercept: TEDUPercept(percept.getName().equals("lastAction"), percept.getParameters().toString().equals("[adopt]"))
    $lastActionResult: TEDUPercept(stepID == $tPercept.stepID, percept.getName().equals("lastActionResult"), percept.getParameters().toString().equals("[success]"))
then
    eis.performAction("A1", new Action("skip"));
    logger.info("$$$$$RULE: after adopting a role skip one action");
end

rule "Adopt Action: when in role zone adopt the worker role"
when
    $TEDUPercept: TEDUPercept(percept.getName().equals("roleZone"), inRoleZone()==true)
    $isDefault: TEDUPercept(stepID == $TEDUPercept.stepID, percept.getName().equals("role"), isRoleDefault()==true)
then
    eis.performAction("A1", new Action("adopt", new Identifier("worker")));
    logger.info("$$$$$RULE: adopt the worker role");
end

rule "Route to the Dispenser: When encountered with a dispenser calculate the route towards it"
when
    $TEDUPercept: TEDUPercept(percept.getName().equals("thing"), identifyThing().equals("dispenser"))
then
    StringBuilder myRoute = agent.routeTowardsDispenser($TEDUPercept.percept, $TEDUPercept);
    logger.info("$$$$$RULE: route to the dispenser: " + myRoute);
end

rule "Move Action: Start"
when
    $tPercept: TEDUPercept(percept.getName().equals("lastAction"), percept.getParameters().toString().equals("[]"))
    $taskPercept: TEDUPercept(percept.getName().equals("task"))
then
    if($taskPercept.percept.getParameters().get(0).toString().equals("task0"))
        agent.parseTaskAndAssign($taskPercept.percept);

    String direction = agent.generateRandomDirection();
    eis.performAction("A1", new Action("move", new Identifier(direction)));
    //eis.performAction("A1", new Action("move", new Identifier("w")));
    logger.info("$$$$$RULE: If simulation starts for the first time move randomly: " + direction);
end

rule "Previous move is successful"
when
    $tPercept: TEDUPercept(percept.getName().equals("lastAction"), percept.getParameters().toString().equals("[move]"))
    $lastActionResult: TEDUPercept(stepID == $tPercept.stepID, percept.getName().equals("lastActionResult"), percept.getParameters().toString().equals("[success]"))
    $lastActionParams: TEDUPercept(stepID == $tPercept.stepID, percept.getName().equals("lastActionParams"),
    $direction: percept.getParameters().toString())
then
    eis.performAction("A1", new Action("move", new Identifier($direction.substring(2,3))));
    /*
    if($direction.substring(2,3).equals("n"))
            eis.performAction("A1", new Action("move", new Identifier("n")));
        else
            eis.performAction("A1", new Action("move", new Identifier("s")));
    */
    logger.info("$$$$$RULE: When previous move is successful move in the same direction as before: " + $direction.substring(2,3));
end

rule "Clear Action: If there is an obstacle in the front after a move"
when
    $tPercept: TEDUPercept(percept.getName().equals("lastAction"), percept.getParameters().toString().equals("[move]"))
    $lastActionResult: TEDUPercept(stepID == $tPercept.stepID, percept.getName().equals("lastActionResult"), percept.getParameters().toString().equals("[failed_path]"))
    $lastActionParams: TEDUPercept(stepID == $tPercept.stepID, percept.getName().equals("lastActionParams"),
    $direction : percept.getParameters().toString())
then
    if($direction.equals("[[n]]"))
        eis.performAction("A1", new Action("clear",new Numeral(0), new Numeral(-1) ));
    else if ($direction.equals("[[s]]"))
        eis.performAction("A1", new Action("clear",new Numeral(0), new Numeral(1) ));
    else if ($direction.equals("[[e]]"))
        eis.performAction("A1", new Action("clear",new Numeral(1), new Numeral(0) ));
     else
        eis.performAction("A1", new Action("clear",new Numeral(-1), new Numeral(0) ));
    logger.info("$$$$$RULE: Clear the obstacle in front of the agent: " + $direction.substring(2,3));
end

rule "Clear Action: If the obstacle is successfully cleared"
when
    $tPercept: TEDUPercept(percept.getName().equals("lastAction"), percept.getParameters().toString().equals("[clear]"))
    $lastActionResult: TEDUPercept(stepID == $tPercept.stepID, percept.getName().equals("lastActionResult"), percept.getParameters().toString().equals("[success]"))
    $lastActionParams: TEDUPercept(stepID == $tPercept.stepID, percept.getName().equals("lastActionParams"),
    $direction: percept.getParameters().toString())
then
    if($direction.equals("[[0,-1]]"))
        eis.performAction("A1", new Action("move", new Identifier("n")));
    else if ($direction.equals("[[0,1]]"))
        eis.performAction("A1", new Action("move", new Identifier("s")));
    else if ($direction.equals("[[1,0]]"))
        eis.performAction("A1", new Action("move", new Identifier("e")));
     else
        eis.performAction("A1", new Action("move", new Identifier("w")));
    logger.info("$$$$$RULE: After a successful clear, move to the cleared spot: " + $direction);
end

rule "Clear Action: If massim produces failed_random randomly after a clear action"
when
    $tPercept: TEDUPercept(percept.getName().equals("lastAction"), percept.getParameters().toString().equals("[clear]"))
    $lastActionResult: TEDUPercept(percept.getName().equals("lastActionResult"), percept.getParameters().toString().equals("[failed_random]"))
    $lastActionParams: TEDUPercept(stepID == $tPercept.stepID, percept.getName().equals("lastActionParams"),
    $direction : percept.getParameters().toString())
then
    eis.performAction("A1", new Action("clear", new Numeral(Integer.parseInt($direction.substring(2,3))), new Numeral(Integer.parseInt($direction.substring(4,5)))));
    logger.info("$$$$$RULE: If cleaning fails randomly keep on cleaning" + $direction);
end

rule "If massim produces failed_random randomly"
when
    $lastActionResult: TEDUPercept(percept.getName().equals("lastActionResult"), percept.getParameters().toString().equals("[failed_random]"))
then
    String direction = agent.generateRandomDirection();
    eis.performAction("A1", new Action("move", new Identifier(direction)));
    //eis.performAction("A1", new Action("move", new Identifier("s")));
    logger.info("$$$$$RULE: If MASSim produces failed_random randomly, move randomly: " + direction);
end

rule "If massim produces failed_status after a move"
when
    $tPercept: TEDUPercept(percept.getName().equals("lastAction"), percept.getParameters().toString().equals("[move]"))
    $lastActionResult: TEDUPercept(stepID == $tPercept.stepID, percept.getName().equals("lastActionResult"), percept.getParameters().toString().equals("[failed_status]"))
then
    String direction = agent.generateRandomDirection();
    eis.performAction("A1", new Action("move", new Identifier(direction)));
    //eis.performAction("A1", new Action("move", new Identifier("s")));
    logger.info("$$$$$RULE: If MASSim produces failed_status, move randomly: " + direction);
end
